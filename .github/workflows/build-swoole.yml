name: Build Swoole

on: [ push ]
env:
  ENGINE: 'swoole'
  SW_VERSION: 'v6.0.2'
  COMPOSER_VERSION: '2.8.8'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}
  CODING_PASSWORD: ${{ secrets.CODING_PASSWORD }}
jobs:
  build:
    name: Build PHP ${{ matrix.php-version }} Alpine ${{ matrix.alpine-version }} ${{ matrix.spec }}
    runs-on: '${{ matrix.os }}'
    env:
      ALPINE_VERSION: '${{ matrix.alpine-version }}'
      PHP_VERSION: '${{ matrix.php-version }}'
      SPEC: '${{ matrix.spec }}'
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        spec: [ "", "-slim" ]
        php-version: [ '8.1', '8.2', '8.3', '8.4' ]
        alpine-version: [ '3.16', '3.17', '3.18', '3.19', '3.20', '3.21', '3.22', 'edge' ]
        exclude:
          - php-version: '8.4'
            alpine-version: '3.16'
          - php-version: '8.4'
            alpine-version: '3.17'
          - php-version: '8.4'
            alpine-version: '3.18'
          - php-version: '8.4'
            alpine-version: '3.19'
          - php-version: '8.4'
            alpine-version: '3.20'
          - php-version: '8.3'
            alpine-version: '3.16'
          - php-version: '8.3'
            alpine-version: '3.17'
          - php-version: '8.3'
            alpine-version: '3.18'
          - php-version: '8.2'
            alpine-version: '3.16'
          - php-version: '8.2'
            alpine-version: '3.17'
          - php-version: '8.1'
            alpine-version: '3.20'
          - php-version: '8.1'
            alpine-version: '3.21'
          - php-version: '8.1'
            alpine-version: '3.22'
          - php-version: '8.1'
            alpine-version: 'edge'
      max-parallel: 16
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Fetch the PHP BUILD VERSION
        id: fetch-php-build-version
        shell: php {0}
        run: |
          <?php
          $alpineVersion = getenv('ALPINE_VERSION');
          $phpVersion = getenv('PHP_VERSION');
          $version = str_replace(".", "", $phpVersion);
          echo "::set-output name=version::" . $version . PHP_EOL;
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: limingxinleo
          password: ${{ secrets.DOCKERHUB_ACCESSTOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            hyperf/hyperf
          tags: |
            type=semver,pattern=${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}-${{ env.ENGINE }}${{ env.SPEC }}-v{{version}},value=${{ env.SW_VERSION }}
            type=semver,pattern=${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}-${{ env.ENGINE }}${{ env.SPEC }}-v{{major}}.{{minor}},value=${{ env.SW_VERSION }}
            type=semver,pattern=${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}-${{ env.ENGINE }}${{ env.SPEC }}-v{{major}},value=${{ env.SW_VERSION }}
            type=raw,value=${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}-${{ env.ENGINE }}${{ env.SPEC }}
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.php-version }}/alpine/swoole
          load: true
          tags: hyperf/hyperf:${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}-swoole${{ env.SPEC }}
          file: ${{ matrix.php-version }}/alpine/swoole/Dockerfile${{ env.SPEC }}
          build-args: |
            "ALPINE_VERSION=${{ matrix.alpine-version }}"
            "COMPOSER_VERSION=${{ env.COMPOSER_VERSION }}"
            "PHP_BUILD_VERSION=${{ steps.fetch-php-build-version.outputs.version }}"
            "SW_VERSION=${{ env.SW_VERSION }}"
      - name: Check
        run: |
          docker run --entrypoint php hyperf/hyperf:${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}-swoole${{ env.SPEC }} -v
          docker run --entrypoint php hyperf/hyperf:${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}-swoole${{ env.SPEC }} --ri swoole
      - name: Push
        if: ${{ github.ref == 'refs/heads/build' }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.php-version }}/alpine/swoole
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          file: ${{ matrix.php-version }}/alpine/swoole/Dockerfile${{ env.SPEC }}
          build-args: |
            "ALPINE_VERSION=${{ matrix.alpine-version }}"
            "COMPOSER_VERSION=${{ env.COMPOSER_VERSION }}"
            "PHP_BUILD_VERSION=${{ steps.fetch-php-build-version.outputs.version }}"
            "SW_VERSION=${{ env.SW_VERSION }}"
      - name: Push Images to Other Hubs
        if: ${{ github.ref == 'refs/heads/build' }}
        run: ./.github/workflows/push.sh

